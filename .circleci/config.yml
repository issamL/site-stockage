jobs:
  backend tests:
    docker:
      - image: circleci/php:7.3-node-browsers
    steps:
      - checkout
      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - run: ./vendor/bin/phpunit
      - store_test_results

  automatic test:
    docker:
      - image: circleci/node:lts-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: cd wdio && npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm install @wdio/cli
      - run: cd wdio && npm test
      - store_test_results:
          path: wdio/allure-results
      - run:
          name: Compress Artifacts
          command: tar -cvzf allure-results.tar wdio/allure-results
      - store_artifacts:
          path: allure-results.tar
          destination: allure-results
      - store_artifacts:
          path: wdio/allure-results.tar


      # - run:
      #     name: Creating Dummy Artifacts
      #     command: |
      #       echo "my artifact file" > /tmp/art-1;
      #       mkdir /tmp/artifacts;
      #       echo "my artifact files in a dir" > /tmp/artifacts/art-2;

      # - store_artifacts:
      #     path: /tmp/art-1
      #     destination: artifact-file

      # - store_artifacts:
      #     path: /tmp/artifacts     


  sonar analysis:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - sonarcloud/scan:
        context: sonarcloud

  load test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: sudo apt-get update
      - run: wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.3.zip
      - run: sudo apt-get install unzip
      - run: unzip apache-jmeter-5.3.zip
      - run: sudo mv load-test/* apache-jmeter-5.3/bin/
      - run: cd apache-jmeter-5.3/bin && ls
      - run: cd ../../../lib && ls
      - run: cd ../../../lib/jvm && ls
      - run: cd apache-jmeter-5.3/bin && sudo ./jmeter -n â€“t ../../load-test/sign-in-scenario.jmx -l testresults.jtl
      - store_artifacts:
          path: ./load-test/testresults.jtl


version: 2.1
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.2
workflows:
  main:
    jobs:
      #- backend tests
      #- automatic test
      #- sonar analysis
      - load test
      
  

      
  
      

